go.property("player_gameobject", msg.url())

local PLAYER_CONTROLLER_COMPONENT = "/player/go#player"

function init(self)
	-- Init camera on CameraController.go:
	msg.post("#camera", "acquire_camera_focus")
	self.target_position = go.get_position(self.player_gameobject)
	self.wx, self.wy = window.get_size()
	self.shakes = 0
	self.pos = nil
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)

	-- If the player is facing left, push camera a bit left; same for facing right
	-- Calculate a position that's the player - (1/2 screen width, 1/2 screen height)

	self.target_position = go.get_position(self.player_gameobject)

	local vx, vy = window.get_size()

	vx = (vx/32)
	vy = (vy/32)

	--local player_direction = go.get(PLAYER_CONTROLLER_COMPONENT, "direction")

	if player_direction == -1 then 
		vx = vx + 16
	else
		vx = vx - 16
	end

	local camera_pos_target = vmath.vector3(self.target_position.x, self.target_position.y, 0)
	
	go.animate(".", "position.x", go.PLAYBACK_ONCE_FORWARD, camera_pos_target.x, go.EASING_LINEAR, 0.15)
	go.animate(".", "position.y", go.PLAYBACK_ONCE_FORWARD, camera_pos_target.y, go.EASING_LINEAR, 0.15)

	-- handle camera shakes
	if self.shakes > 0 then 
		go.set_position(self.pos + vmath.vector3(math.random() * self.shakes, math.random() * self.shakes, 0))
		self.shakes = self.shakes * 0.9 - 0.1 
	end
end

function fixed_update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

local function shake(self, intensity,duration,direction)
	self.shakes = 8
end

function on_message(self, message_id, message, sender)
	if message_id == hash("shake") then 
		print("SHAKE")
		--msg.post(go.get_id("/CameraController"), "shake", { intensity = 0.7, duration = 0.25, direction = hash("both") })
		shake(self, message.intensity,message.duration,message.direction)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Update window width and height in case that changed:
	self.wx, self.wy = window.get_size()
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end